/** @format */

import { readdirSync, readFileSync, writeFileSync } from "fs";
import { join } from "path";

writeFileSync(
    join(__dirname, "..", "..", "README.md"),
    `<!-- DO NOT EDIT THIS FILE DIRECTLY - EDIT src/build/template.md INSTEAD -->\n\n` +
        readFileSync(join(__dirname, "template.md"), "utf8")
            .replace(
                "<!--CHALLENGES-->",
                readdirSync(join(__dirname, ".."), { withFileTypes: true })
                    .filter((d) => d.isFile() && d.name.endsWith(".ts"))
                    .map(({ name }) => ({ name, file: readFileSync(join(__dirname, "..", name), "utf8") }))
                    .sort((a, b) => +a.file.match(/id: (\d+)/)![1] - +b.file.match(/id: (\d+)/)![1])
                    .map(
                        ({ name, file }) =>
                            `${file.match(/id: (\d+)/)![1]}. (\`${"★".repeat(+file.match(/difficulty: (\d+)/)![1]).padEnd(6, "☆")}\`) [${name.slice(
                                0,
                                -3
                            )}](./src/${name})`
                    )
                    .join("\n")
            )
            .replace(
                "<!--UTILITIES-->",
                readdirSync(join(__dirname, "..", "utility"), { withFileTypes: true })
                    .filter((d) => d.isFile() && d.name.endsWith(".ts") && !d.name.startsWith("index"))
                    .map((v) => `-   [\`${v.name}\`](./src/utility/${v.name})`)
                    .join("\n")
            )
            .replace(
                "<!--COMMON-->",
                readdirSync(join(__dirname, "..", "common"), { withFileTypes: true })
                    .filter((d) => d.isFile() && d.name.endsWith(".ts") && !d.name.startsWith("index"))
                    .map((v) => `-   [\`${v.name}\`](./src/common/${v.name})`)
                    .join("\n")
            )
);
