[
    {
        "id": "1",
        "name": "ReverseTuple",
        "difficulty": 2,
        "description": "Reverse a tuple or readonly tuple, while maintaining mutability of the tuple."
    },
    {
        "id": "2",
        "name": "DeleteCharacter",
        "difficulty": 3,
        "description": "Remove all occurrences of a character from a string."
    },
    {
        "id": "3",
        "name": "MiddleCharacter",
        "difficulty": 4,
        "description": "Get the middle character of a string (middle two if length is even)."
    },
    {
        "id": "4",
        "name": "IncludesString",
        "difficulty": 2,
        "description": "Check whether or not a substring is present in another string."
    },
    {
        "id": "5",
        "name": "IsNotNumberLiteral",
        "difficulty": 1,
        "description": "Determine whether or not the passed type is a number literal."
    },
    {
        "id": "6",
        "name": "IsNever",
        "difficulty": 1,
        "description": "Check if the passed type is never."
    },
    {
        "id": "7",
        "name": "MakeExciting",
        "difficulty": 0,
        "description": "Append '!' to a string."
    },
    {
        "id": "8",
        "name": "PeriodsToUnderscores",
        "difficulty": 3,
        "description": "Append '!' to a string."
    },
    {
        "id": "9",
        "name": "MergeSort",
        "difficulty": 5,
        "description": "Implement the merge sort algorithm."
    },
    {
        "id": "10",
        "name": "NoOverlappingKeys",
        "difficulty": 3,
        "description": "If the two types have conflicting keys, output never, otherwise output the intersection of them."
    }
]